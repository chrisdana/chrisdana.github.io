- name: UAV
  img: assets/images/proj1.png
  desc: >
        During the development of a consumer-grade unmanned aerial vehicle (UAV), 
        a tight feedback loop was necessary for firmware engineers to rapidly verify 
        changes. This was made possible by automating hardware-in-the-loop (HIL/HITL) 
        testing against a virtual 3D environment (jMAVSim). To integrate into the 
        existing automation framework, control messages were automatically parsed 
        from C source files and regenerated in Ruby.
  categories: Automation 
  uses: C, Ruby, minitest, USB, UART, HIL
- name: Tablet
  img: assets/images/proj2.png
  desc: >
        Automation was heavily leveraged as part of verifying the Wi-Fi subsystem 
        integration of one of the first highly-affordable families of consumer 
        tablets. Compatibility tests with popular access points were scripted via 
        Selenium and on-device stress tests found rare-but-critical bugs. In this 
        way, both test coverage and depth were expanded without increasing test 
        cycle durations.
  categories: Automation 
  uses: Android, ADB, Python, Selenium, Robotium
- name: Headphone
  img: assets/images/proj3.png
  desc: >
        Similar to previous projects, test automation was used to provide fast 
        feedback about firmware builds for a pair of premium headphones. In addition, 
        long-running battery drain and charging tests were automated to obviate the 
        need for manual intervention. This allowed for more data points to be captured 
        and gave a clearer picture of performance.
        <br>
        During development of the follow-on product (you guessed it, more headphones), 
        capacitive touch noise issues were encountered. Through collaborative efforts 
        with the EE team, the issue was isolated to chip-internal noise on certain 
        pins and by rerouting those pins to non-touch functionality, costly changes 
        were avoided.
  categories: Automation, Firmware
  uses: Python, ADB, C, I2C, Lab Equipment (Multimeters, Protocol Analyzers, etc.)
- name: Audio SDK
  img: assets/images/proj4.png
  desc: >
        A professional audio encoder SDK product written in C/C++ had become increasingly 
        difficult to maintain due to the number and complexity of manual steps involved 
        in building, testing and releasing it. The solution was an overhaul to a modern 
        development workflow (modified Gitflow), build tools (CMake, Conan), and CI pipelines 
        (GitLab). The final cutover had to be carefully coordinated among multiple teams 
        that shared portions of the codebase, but once complete resulted in a greatly 
        accelerated and simplified CI/CD process.
  categories: Software, DevOps 
  uses: CMake, Conan, Git, GitLab, Python, Docker, VMWare, Ansible, AWS, Artifactory
